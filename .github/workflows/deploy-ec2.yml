name: Deploy to EC2

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch: # 수동 실행 가능

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./whisperx-api
        push: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' }}
        tags: |
          ${{ secrets.ECR_REGISTRY }}/whisperx-api:latest
          ${{ secrets.ECR_REGISTRY }}/whisperx-api:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Deploy to EC2
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          # EC2에서 실행할 배포 스크립트
          cd /home/ubuntu/whisperx-api
          
          # 최신 코드 가져오기
          git pull origin main
          
          # 환경 파일 설정
          if [ ! -f .env ]; then
            cp env.ec2 .env
            echo "⚠️  .env 파일을 생성했습니다. HUGGINGFACE_TOKEN을 설정하세요."
          fi
          
          # 필요한 디렉토리 생성
          mkdir -p models uploads
          
          # Docker Compose로 배포
          docker-compose down
          docker-compose pull
          docker-compose up -d --build
          
          # 헬스체크
          sleep 30
          curl -f http://localhost:8000/health || exit 1
          
          echo "✅ 배포 완료!"